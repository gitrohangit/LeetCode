class Solution {
    public int numJewelsInStones(String J, String S) {
        
        Map<Character,Integer> noj = new HashMap<Character,Integer>();
        int count = 0;
        char[] ch = J.toCharArray();
        
        for(int i = 0; i < ch.length;i++)
        {
            noj.put(ch[i],0);
        }
        
        ch = S.toCharArray();
        
        for(int i = 0; i < ch.length;i++)
        {
            if(noj.containsKey(ch[i]))
                count++;
        }
        
        return count;
    }
}

I used hash set and it's O(1) time to check if it contains an element.
So the total time complexity will be O(J+S), instead of O(JS)
Space is O(J)
